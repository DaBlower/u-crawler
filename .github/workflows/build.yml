name: Cross-platform Build

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'  # triggers on version tags like v1.0.0
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            label: Linux-X64
          - os: windows-latest
            label: Windows-X64
          - os: macos-latest
            label: macos-ARM64
          - os: ubuntu-24.04-arm
            label: Linux-ARM64
            container: python:3.11-slim-bookworm # support older versions of glibc (aka my raspi on bookworm)

    container: ${{  matrix.container  }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        if: matrix.container == '' # python:3.11-slim-bookworm already has python 
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install dependencies (Linux ARM64 specific)
        if: runner.os == 'Linux' && runner.arch == 'ARM64'
        run: |
          apt-get update && apt-get install binutils

      - name: Build executable
        run: pyinstaller --clean --noconfirm u-crawler.spec

      - name: Move build artifacts (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p dist/${{ runner.os }}-${{ runner.arch  }}
          mv dist/u-crawler* dist/${{ runner.os }}-${{  runner.arch  }}/

      - name: Move build artifacts (Windows)
        if: runner.os == 'Windows'
        run: |
          New-Item -ItemType Directory -Force -Path dist/${{ runner.os }}-${{ runner.arch  }}
          Move-Item dist\u-crawler* dist\${{ runner.os }}-${{  runner.arch  }}\

      - name: Zip artifacts (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          cd dist/${{ runner.os }}-${{  runner.arch  }}
          zip -r ../u-crawler-${{ runner.os }}-${{ runner.arch  }}.zip .

      - name: Zip artifacts (Windows)
        if: runner.os == 'Windows'
        run: |
          Compress-Archive -Path dist/${{ runner.os }}-${{  runner.arch  }}/* `
                            -DestinationPath dist/u-crawler-${{ runner.os }}-${{  runner.arch  }}.zip


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ runner.os }}-${{  runner.arch  }}
          path: dist/u-crawler-${{ runner.os }}-${{ runner.arch }}.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Load release template
        id: release_notes
        run: |
          printf "body<<EOF\n%s\nEOF\n" "$(cat .github/release.md)" >> $GITHUB_ENV

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: u-crawler v${{ env.VERSION }}
          body: ${{ env.body }}
          files: artifacts/**/*

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
